import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { TrendingUp, User, Phone, MapPin, Shield } from "lucide-react";

interface PersonalInfoProps {
  message: string;
  setMessage: (message: string) => void;
}

const PersonalInfo: React.FC<PersonalInfoProps> = ({ message, setMessage }) => {
  const [loading, setLoading] = useState(false);
  const [landlordInfo, setLandlordInfo] = useState({
    fullName: "",
    phone: "",
    identityCard: "",
    address: "",
    companyName: "",
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setTimeout(() => {
      setMessage("C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!");
      setLoading(false);
    }, 1000);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="bg-white rounded-3xl shadow-xl border border-slate-200 p-8"
    >
      {/* Header v·ªõi message ƒë·ªông vi√™n */}
      <div className="text-center mb-8">
        <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
          <TrendingUp className="w-8 h-8 text-white" />
        </div>
        <h2 className="text-2xl md:text-3xl font-bold text-slate-800 mb-3">
          Ho√†n Thi·ªán H·ªì S∆° C√° Nh√¢n
        </h2>
        <p className="text-slate-600 text-lg max-w-2xl mx-auto">
          H√£y cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë·ªÉ thu·∫≠t to√°n c·ªßa ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p
          b√†i ƒëƒÉng c·ªßa b·∫°n ti·∫øp c·∫≠n ƒë√∫ng ƒë·ªëi t∆∞·ª£ng v√† ƒë·∫°t hi·ªáu qu·∫£ cao nh·∫•t
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-8">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-3">
              H·ªç v√† t√™n ƒë·∫ßy ƒë·ªß *
            </label>
            <input
              type="text"
              value={landlordInfo.fullName}
              onChange={(e) =>
                setLandlordInfo({ ...landlordInfo, fullName: e.target.value })
              }
              className="w-full px-4 py-3 bg-slate-50 border border-slate-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-slate-800 transition duration-200"
              placeholder="Nh·∫≠p h·ªç v√† t√™n ƒë·∫ßy ƒë·ªß"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-3">
              S·ªë ƒëi·ªán tho·∫°i *
            </label>
            <input
              type="tel"
              value={landlordInfo.phone}
              onChange={(e) =>
                setLandlordInfo({ ...landlordInfo, phone: e.target.value })
              }
              className="w-full px-4 py-3 bg-slate-50 border border-slate-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-slate-800 transition duration-200"
              placeholder="S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-3">
              CMND/CCCD *
            </label>
            <input
              type="text"
              value={landlordInfo.identityCard}
              onChange={(e) =>
                setLandlordInfo({
                  ...landlordInfo,
                  identityCard: e.target.value,
                })
              }
              className="w-full px-4 py-3 bg-slate-50 border border-slate-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-slate-800 transition duration-200"
              placeholder="S·ªë CMND/CCCD"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-3">
              T√™n c√¥ng ty (n·∫øu c√≥)
            </label>
            <input
              type="text"
              value={landlordInfo.companyName}
              onChange={(e) =>
                setLandlordInfo({
                  ...landlordInfo,
                  companyName: e.target.value,
                })
              }
              className="w-full px-4 py-3 bg-slate-50 border border-slate-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-slate-800 transition duration-200"
              placeholder="T√™n c√¥ng ty/doanh nghi·ªáp"
            />
          </div>
        </div>

        <div>
          <label className="block text-sm font-semibold text-slate-700 mb-3">
            ƒê·ªãa ch·ªâ li√™n h·ªá *
          </label>
          <input
            type="text"
            value={landlordInfo.address}
            onChange={(e) =>
              setLandlordInfo({ ...landlordInfo, address: e.target.value })
            }
            className="w-full px-4 py-3 bg-slate-50 border border-slate-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-slate-800 transition duration-200"
            placeholder="ƒê·ªãa ch·ªâ li√™n h·ªá ƒë·∫ßy ƒë·ªß"
            required
          />
        </div>

        {/* Security Note */}
        <div className="bg-blue-50 border border-blue-200 rounded-2xl p-6">
          <div className="flex items-start gap-4">
            <Shield className="w-6 h-6 text-blue-600 mt-1 flex-shrink-0" />
            <div>
              <h4 className="font-semibold text-blue-800 mb-2">
                B·∫£o m·∫≠t th√¥ng tin
              </h4>
              <p className="text-blue-700 text-sm">
                Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o m·∫≠t an to√†n v√† ch·ªâ s·ª≠ d·ª•ng cho m·ª•c
                ƒë√≠ch x√°c minh danh t√≠nh. Ch√∫ng t√¥i cam k·∫øt kh√¥ng chia s·∫ª th√¥ng
                tin cho b√™n th·ª© ba.
              </p>
            </div>
          </div>
        </div>

        <motion.button
          type="submit"
          disabled={loading}
          className="w-full py-4 bg-gradient-to-r from-blue-500 to-cyan-600 hover:from-blue-600 hover:to-cyan-700 text-white font-semibold rounded-2xl text-lg transition duration-300 shadow-lg shadow-blue-200 disabled:opacity-50 disabled:cursor-not-allowed"
          whileHover={{ scale: loading ? 1 : 1.02 }}
          whileTap={{ scale: 0.98 }}
        >
          {loading ? (
            <div className="flex items-center justify-center">
              <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-3"></div>
              ƒêang c·∫≠p nh·∫≠t...
            </div>
          ) : (
            "üíº C·∫≠p Nh·∫≠t Th√¥ng Tin"
          )}
        </motion.button>
      </form>

      {/* Message */}
      <AnimatePresence>
        {message && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            className="mt-6 p-4 bg-green-50 border border-green-200 rounded-2xl"
          >
            <p className="text-green-700 text-center font-medium">{message}</p>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
};

export default PersonalInfo;
